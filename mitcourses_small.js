var mitcourses_small = "<a name=1.000></a> <p><h3>1.000 Computer Programming for Engineering Applications <br><img alt=______ src=/icns/hr.gif></h3> <img width=16 height=16 align=bottom alt=Undergrad title=Undergrad src=/icns/under.gif>  (<img width=16 height=16 align=bottom alt=Fall title=Fall src=/icns/fall.gif>) <img src=/icns/rest.gif alt=Rest Elec in Sci & Tech title=Rest Elec in Sci & Tech width=16 height=16 align=bottom> <br>Prereq: None. <I>Coreq: <a href=m18a.html#18.03>18.03</a></I> <br>Units: 3-2-7 <br><img alt=______ src=/icns/hr.gif> <br>Presents the fundamentals of computing and computer programming (procedural and object-oriented programming) in an engineering context. Introduces logical operations, floating-point arithmetic, data structures, induction, iteration, and recursion. Computational methods for interpolation, regression, root finding, sorting, searching, and the solution of linear systems of equations and ordinary differential equations. Control of sensors and visualization of scientific data. Draws examples from engineering and scientific applications. Students use the MATLAB programming environment to complete weekly assignments. <br><I>R. Juanes</I><br> </p><!--end--> <a name=1.001></a> <p><h3>1.001 Engineering Computation and Data Science <br><img alt=______ src=/icns/hr.gif></h3> <img width=16 height=16 align=bottom alt=Graduate title=Graduate src=/icns/grad.gif>  (<img width=16 height=16 align=bottom alt=Spring title=Spring src=/icns/spring.gif>) <br>(Subject meets with <A HREF=m1a.html#1.00>1.00</A>) <br>Prereq: <a href=./search.cgi?search=&cred=m1 title=18.01, 18.01A, 18.014>Calculus I (GIR)</a> <br>Units: 3-2-7 <br><b>Lecture:</b> <i>MW9.30-11</i> (<a href=http://whereis.mit.edu/map-jpg?mapterms=1>1-390</a>) <b>Lab:</b> <i>F9-11</i> (<a href=http://whereis.mit.edu/map-jpg?mapterms=1>1-390</a>)<!--s--> <br><img alt=______ src=/icns/hr.gif> <br>Presents engineering problems in a computational setting with emphasis on data science and problem abstraction. Introduces modern development tools, patterns, and libraries for distributed-asynchronous computing, including Distributed Hash Tables, Merkle trees, PKI encryption and Zero Knowledge Proofs. Covers data cleaning and filtering, linear regression, and basic machine learning algorithms, such as clustering, classifiers, decision trees. Sharpens problem-solving skills in an active learning lab setting. In-class exercises and weekly assignments lead to a group project. Students taking graduate version complete additional assignments and project work. <br><I>J. Williams</I><br>No required or recommended textbooks </p><!--end-->";

module.exports = mitcourses_small;